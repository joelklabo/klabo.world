// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  role          String    @default("USER")
  posts         Post[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Post {
  id            String    @id @default(cuid())
  slug          String    @unique
  title         String
  excerpt       String?
  content       String
  published     Boolean   @default(false)
  publishedAt   DateTime?
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  images        Image[]
  tags          Tag[]
  viewCount     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([slug])
  @@index([published, publishedAt])
}

model Page {
  id            String    @id @default(cuid())
  slug          String    @unique
  title         String
  content       String
  isDynamic     Boolean   @default(false)
  customCode    String?
  order         Int       @default(0)
  visible       Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([slug])
  @@index([visible, order])
}

model Image {
  id            String    @id @default(cuid())
  url           String
  altText       String?
  width         Int?
  height        Int?
  size          Int?
  post          Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId        String?
  uploadedAt    DateTime  @default(now())
  
  @@index([postId])
}

model Tag {
  id            String    @id @default(cuid())
  name          String    @unique
  slug          String    @unique
  posts         Post[]
  createdAt     DateTime  @default(now())
  
  @@index([slug])
}

model SocialLink {
  id            String    @id @default(cuid())
  platform      String
  url           String
  icon          String?
  order         Int       @default(0)
  visible       Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([visible, order])
}

model GitHubCache {
  id            String    @id @default(cuid())
  key           String    @unique
  data          String    // Store JSON as string for SQLite
  expiresAt     DateTime
  createdAt     DateTime  @default(now())
  
  @@index([key, expiresAt])
}